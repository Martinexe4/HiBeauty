datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model SKIN {
  SKINID           String           @id @db.Char(5)
  SKINIMG          String           @db.VarChar(255)
  users            UserSkin[]       //Many-to-many relation of User and Skin
  recommendations  SkinRecomendation[]
}

model User {
  USERID           String           @id @db.Char(16) @default(nanoid(16))
  USERNAME         String           @db.VarChar(25)
  EMAIL            String           @db.VarChar(200) @unique
  PASSWORD         String           @db.VarChar(255)
  PROFILEIMG       String?          @db.VarChar(255)
  AGE              Int?             // Field untuk umur
  GENDER           String?          // Field untuk jenis kelamin
  CREATEDAT        DateTime         @default(now()) @db.Timestamp(0)
  UPDATEDAT        DateTime         @default(now()) @db.Timestamp(0)
  skinId           String?
  skins            UserSkin[]       // Many-to-many relation of Skin and User
}

model UserSkin {
  UserId    String
  SkinId    String
  user      User      @relation(fields: [UserId], references: [USERID])
  skin      SKIN      @relation(fields: [SkinId], references: [SKINID])

  @@id([UserId, SkinId]) // Composite primary key
}

model Product {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(50)
  description     String          @db.VarChar(200)
  ingridients     String          
  link            String
  image           String?          @db.VarChar(255)
  recomId         Int             
  recommendation  Recommendation  @relation(fields: [recomId], references : [id])
  typeId          Int             
  typeProd        ProductType     @relation(fields: [typeId], references : [id])
}

model ProductType {
  id              Int             @id @default(autoincrement())
  type            String
  products        Product[]
}

model Recommendation {
  id                  Int      @id @default(autoincrement())
  skinType            String
  skins               SkinRecomendation[]
  products            Product[]
} //Apa sebenarnya isi recommendations?

model SkinRecomendation {
  skinId           String
  recommendationId Int
  percentage       Float
  skin             SKIN          @relation(fields: [skinId], references: [SKINID])
  recommendation   Recommendation @relation(fields: [recommendationId], references: [id])
  @@id([skinId, recommendationId]) // Composite primary key
}